# Default values for orchestrator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "sample-sa"

podAnnotations: { }

podSecurityContext:
  fsGroup: 65534
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: [ ]
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: "0.5"
    memory: 1G
  requests:
    cpu: "0.5"
    memory: 1G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

deployment:
  env:
    - name: SPRING_PROFILES_ACTIVE
      value: "dev"

  healthPath: "/orchestrator/actuator/health"

persistence: 
  enabled: false
  storageClass: efs-sc
  accessMode: ReadWriteMany
  size: 1Gi
  volumeMounts:
  - name: run
  mountPath: /var
  volumes:
  - name: run
    persistentVolumeClaim:
      claimName: efs-volume-claim


datadogAgent:
  enabled: false
  DD_API_KEY: 6fc3fbf09c6da001e2f4411d6e780180
  DD_TAGS: "clustername:eks_development"
  resources:
    limits:
      cpu: "200m"
      memory: "256Mi"
    requests:
      cpu: "200m"
      memory: "256Mi"
